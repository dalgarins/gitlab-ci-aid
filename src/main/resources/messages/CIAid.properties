annotator.error.need-job-undefined=Job ''{0}'' is undefined
annotator.error.stage-undefined=Undefined stage ''{0}'' or not present in pipeline stages
annotator.error.script-not-found=Script ''{0}'' is not available on path
annotator.create-script=Create script
annotator.error.include-not-found=Include file ''{0}'' is not available on path
annotator.create-include-file=Create include file

editor.notification.mark-as-gitlab-yaml-question=Do you want to mark this file as a GitLab CI YAML file?
editor.notification.mark-as-gitlab-yaml=Mark as GitLab CI
editor.notification.ignore=Ignore

variables.completion.declared.multiple.files=Declared in multiple files

settings.display.name=CI Aid for Gitlab

settings.general.separator=General Settings
settings.general.ci.yaml.path=GitLab CI Yaml Path
settings.general.ci.yaml.path.empty-text=.gitlab-ci.yml
settings.general.ci.yaml.path.comment-text=If project root directory doesn't contain .gitlab-ci.yml or .gitlab-ci.yaml, specify the default GitLab CI yaml absolute path or path relative to project root
settings.general.ci.yaml.path.non-existing-file=File doesn't exist or not a .yml or .yaml file
settings.general.ci.yaml.path.not-in-current-project=File is not in current project or not a .yml or .yaml file

settings.inspections.separator=Inspections
settings.inspections.ignore-undefined-job=Ignore "Undefined Job" errors
settings.inspections.ignore-undefined-stage=Ignore "Undefined Stage" errors
settings.inspections.ignore-script-unavailable=Ignore "Script not available on path" errors
settings.inspections.ignore-include-unavailable=Ignore "Include file not available on path" errors
settings.inspections.ignore-undefined-job-stage-comment=Ignore job and stage errors if components, remote or templates are used

settings.user.yamls.separator=User Marked Yaml(s)
settings.user.yamls.table.path-column=Path
settings.user.yamls.table.ignore-column=Ignore
settings.user.yamls.table.empty-text=No files added. Click '+' to add a file path.

settings.remotes.display.name=Remotes
settings.remotes.dialog.title={0} GitLab Server
settings.remotes.dialog.title.add=Add
settings.remotes.dialog.title.edit=Edit
settings.remotes.gitlab.project.config.separator=GitLab Project Configuration

settings.remotes.table.gitlab-api-url-column=GitLab API URL
settings.remotes.dialog.gitlab-api-url.empty-text=https://gitlab.com/api/v4
settings.remotes.dialog.gitlab-api-url.comment-text=If you use a self-hosted GitLab instance, specify the API URL of your GitLab server e.g, https://gitlab.custom.com/api/v4. Otherwise, leave it as default.
settings.remotes.dialog.gitlab-api-url.validation.error=Must be a valid HTTP or HTTPS URL
settings.remotes.table.project-column=Project
settings.remotes.dialog.project.empty-text=/group/project
settings.remotes.dialog.project.comment-text=Specify the project path in GitLab. For example, if your project URL is https://gitlab.com/group/project, then specify /group/project.
settings.remotes.dialog.project.validation.error=Must not be an empty string
settings.remotes.table.access-token-column=Access Token
settings.remotes.dialog.access-token.empty-text=glpat-c2USPsJDzVe-xavY_pzm
settings.remotes.dialog.access-token.comment-text=Specify your personal access token with api, read_user scope to connect to GitLab. You can create a personal access token in your GitLab profile settings under "Access Tokens".
settings.remotes.dialog.access-token.validation.error=Must not be an empty string

settings.gitlab.templates.project=Templates Project
settings.gitlab.templates.project.empty-text=gitlab-org/gitlab
settings.gitlab.templates.project.comment-text=If you use a self-hosted GitLab instance, specify the project where your templates are store. For https://gitlab.com, leave it as default.
settings.gitlab.templates.path=Templates Path
settings.gitlab.templates.path.empty-text=lib/gitlab/ci/templates
settings.gitlab.templates.path.comment-text=If you use a self-hosted GitLab instance, specify path where your templates are stored relative to root gitlab url. For https://gitlab.com, leave it as default.

settings.remotes.caching.separator=Caching Settings
settings.remotes.caching.enable-caching=Enable components, templates and remote files caching
settings.remotes.caching.expiry-time=Cache expiry time (in hours)
settings.remotes.caching.expiry-time.empty-text=24
settings.remotes.caching.expiry-time.tooltip-text=Specify the cache expiry time in hours. After this time, the cache will be cleared and files will be fetched again from GitLab.
settings.remotes.caching.clear-cache=Clear Cache
